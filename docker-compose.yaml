version: '3.8'

x-networks: &chess-networks
  - chessnet


services:

  # redis:
  #   container_name: redis
  #   image: redis:6-alpine
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --requirepass password
  #   networks:
  #     - react-chess
  #   restart: unless-stopped
  #   networks: *chess-networks

  postgresql:
    container_name: postgresql
    image: postgres:14.0-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=1q2w3e4r
    volumes:
      - ./postgres/postgres.conf:/etc/postgresql/postgresql.conf
      - postgres-data:/var/lib/postgresql/data
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    networks: *chess-networks
    

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-duynguyenngoc@hotmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-1q2w3e4r}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    depends_on:
      - postgresql
    networks: *chess-networks

  # socket:
  #   container_name: socket
  #   ports:
  #     - "3001:3001"
  #   build:
  #     context: ./socket
  #     dockerfile: ./Dockerfile
  #   command: node server
  #   networks: *chess-networks

      
  # api-webrtc:
  #   container_name: api
  #   build:
  #     context: ./api-webrtc
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "3002:3002"
  #   volumes:
  #     - ./api-webrtc/app:/app
  #   command: uvicorn main:app --host 0.0.0.0 --port 3002 --reload
  #   restart: unless-stopped
  #   depends_on:
  #     - postgresql
  #   networks: *chess-networks
    
    
networks:
  chessnet:
    driver: bridge

volumes:
   pgadmin:
   postgres-data:
    